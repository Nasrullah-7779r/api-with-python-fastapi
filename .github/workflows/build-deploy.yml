name: Build & Deploy Code

on: [push,pull_request]

jobs:
  job1:
#    env:
#      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
#      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
#      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
#      SECRET_KEY: ${{secrets.SECRET_KEY}}
#      ALGORITHM: ${{secrets.ALGORITHM}}
#      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.TEST_DATABASE_NAME}}
        ports:
          - 5432:5432
#    services:
#      postgres:
#        image:
    runs-on: ubuntu-latest
    steps:



      - name: pulling git repo
        uses: actions/checkout@v4
        env:
          DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          ALGORITHM: ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

      - name: print something on console
        run:  echo "Hello linux 3rd"
      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install dependencies
        run: pip install -r requirements.txt

      - name: Test the app
        run:  |
          pip install pytest
          pytest


#      - name: Run the app
#        run:  uvicorn app2.main:app
#
#
#      - name: Capture response
#        id: app_get_response
#        run: response=$(curl -s http://127.0.0.1:8000/)
#          echo "::set-output name=response::$response"
#
#      - name: Print GET response
#        run: echo "Response from Get request:${{steps.app_get_response.outputs.response}}"
#  push:
#    branches:
#      - "dev"
#  pull_request:
#    branches:
#      - "test_branch"asasdadadasd